<div class="min-vh-100 d-flex justify-content-center align-items-start ">
    <div class="m-3 border rounded p-5 bg-dark-subtle w-100">
        <div class="row pb-3 align-items-center">
            <h2>Realtime Events</h2>
        </div>
        <!-- The list where the events will appear -->
        <ul id="eventsList" class="list-group list-group-flush">
            <% data.forEach(event=> { %>
                <li class="list-group-item d-flex justify-content-evenly" data-timestamp="<%= event.ts %>">
                    <div class="w-25 hstack gap-3 align-items-center justify-content-center">
                        <img style="max-height:40px;" src="<%= event.discordAvatar %>" alt="<%= event.username %>"
                            class="discord-avatar rounded-circle">
                        <strong>
                            <%= event.username %>
                        </strong>
                    </div>
                    <div class="vr"></div>
                    <div class="w-25 hstack gap-2 align-items-center justify-content-center">
                        <strong>Current Streak: </strong>
                        <span>&#128293;</span>
                        <%= event.currentStreak %>
                    </div>
                    <div class="vr"></div>
                    <div class="w-25 hstack gap-2 align-items-center justify-content-center">
                        <strong>Push #: </strong>
                        <i class="bi bi-github"></i>
                        <%= event.totalPushes %>
                    </div>
                    <div class="w-25 hstack gap-2 align-items-center justify-content-center">
                        <span class="badge text-bg-secondary timeSince">a moment ago</span>
                    </div>
                </li>
                <% }); %>
        </ul>
    </div>
</div>

<!-- Include socket.io client and the script for real-time updates -->
<script>
    const socket = io.connect();

    socket.on('/realtime', function (data) {
        const list = document.getElementById('eventsList');

        // Template literal for new list item
        const listItemHTML = `
        <li class="list-group-item d-flex justify-content-evenly" data-timestamp="${data.ts}">
            <div class="w-25 hstack gap-3 align-items-center justify-content-center">
                <img style="max-height:40px;" src="${data.discordAvatar}" alt="${data.username}" class="discord-avatar rounded-circle">
                <strong>${data.username}</strong>
            </div>
            <div class="vr"></div>
            <div class="w-25 hstack gap-2 align-items-center justify-content-center">
                <strong>Current Streak: </strong>
                <span>&#128293;</span>
                ${data.currentStreak}
            </div>
            <div class="vr"></div>
            <div class="w-25 hstack gap-2 align-items-center justify-content-center">
                <strong>Push #: </strong>
                <i class="bi bi-github"></i>
                ${data.totalPushes}
            </div>
            <div class="w-25 hstack gap-2 align-items-center justify-content-center">
                <span class="badge text-bg-secondary timeSince">a moment ago</span>
            </div>
        </li>
    `;

        // Use the insertAdjacentHTML method to prepend the template to the list
        list.insertAdjacentHTML('afterbegin', listItemHTML);

        while (list.childNodes.length > 50) {
            list.removeChild(list.lastChild);
        }

        updateTimeSince();
    });

    function updateTimeSince() {
        const eventElements = document.querySelectorAll('[data-timestamp]');
        eventElements.forEach(element => {
            const timestamp = element.getAttribute('data-timestamp');
            const timeSinceElement = element.querySelector('.timeSince');
            timeSinceElement.textContent = moment(timestamp).fromNow();
        });
    }

    // Call immediately to format all timestamps
    updateTimeSince();

    // Then update every minute
    setInterval(updateTimeSince, 60000);

</script>