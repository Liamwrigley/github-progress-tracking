<div class="min-vh-100 d-flex justify-content-center align-items-center">
  <div class="m-3 border rounded p-5 bg-dark-subtle">
    <div class="vstack gap-5 align-items-start justify-content-center">
      <h2>Select a Repository to Track!</h2>

      <div class="alert m-0 alert-warning d-flex align-items-center" role="alert">
        <i class="bi bi-exclamation-triangle fs-2 me-2"></i>
        <div>
          This will add a webhook to the selected repo that will alert us
          when a repo changes.
        </div>
      </div>

      <form action="/auth/github-submit-repo" method="post" class="p-0 w-100">
        <div class="form-group vstack gap-4 align-items-start justify-content-center">
          <div>
            <label for="repoDropdown" class="form-label">Select your repository</label>
            <select class="form-select" id="repoDropdown" name="repoName">
              <% repoList.forEach((repo)=> { %>
                <option value="<%= repo.name %>" data-description="<%= repo.description %>"
                  data-url="<%= repo.html_url %>">
                  <%= repo.name %>
                </option>
                <% }); %>
            </select>
          </div>
          <div class="" id="repoDetails">
            <p>
              <strong>Description:</strong> <span id="description"></span>
            </p>
            <p>
              <a href="" id="repoUrl" target="_blank">View Repository</a>
            </p>
          </div>
        </div>
        <input type="hidden" name="repoData" id="repoData" />
        <button type="submit" class="btn btn-primary">Submit</button>
      </form>

    </div>
    <!-- <div class="border rounded p-5 bg-dark-subtle"> -->
    <!-- <div class="row pb-3 align-items-center">
        <h2>Select a Repository to Track!</h2>
      </div> -->
    <!-- <div class="row pb-3 align-items-center">
      </div> -->
    <!-- <div class="row pb-3 align-items-center"> -->
    <!-- </div> -->
    <!-- </div> -->
  </div>
</div>

<script>
  function updateRepoDetails(dropdown) {
    const selectedOption = dropdown.options[dropdown.selectedIndex];

    // Extract data from the selected option
    const description = selectedOption.getAttribute("data-description");
    const url = selectedOption.getAttribute("data-url");

    // Update the display area with the selected repository's details
    document.getElementById("description").textContent = description;
    document.getElementById("repoUrl").href = url;

    // Store the JSON representation of the repo in the hidden field
    const repoData = {
      name: selectedOption.value,
      description: description,
      url: url,
      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone
    };
    document.getElementById("repoData").value = JSON.stringify(repoData);
  }

  const repoDropdown = document.getElementById("repoDropdown");

  repoDropdown.addEventListener("change", function () {
    updateRepoDetails(this);
  });

  // Handle the default/initial selection
  updateRepoDetails(repoDropdown);
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>